{"version":3,"file":"commands.js","mappings":"yBAWO,SAASA,EAAyBC,GACvC,MAAMC,EAA6C,CACjDC,KAAMC,OAAOC,aAAaC,4BAA4BC,qBACtDL,QAAS,oBACTM,KAAM,aACNC,YAAY,GAIdL,OAAOM,QAAQC,QAAQC,KAAKC,qBAAqBC,aAAa,gCAAiCZ,GAG/FD,EAAMc,WACR,CCnBAX,OAAOY,SAAQC,UACb,GAAQC,EAAKC,OACNf,OAAOgB,SAASC,QAInB,MAAM,IAAIC,MAAM,GAAGJ,EAAKC,uBAHxBf,OAAOmB,QAAQC,UAAU,SAAUxB,EAKvC,G","sources":["webpack://outlooknotesaddinnew2/./src/commands/outlook.ts","webpack://outlooknotesaddinnew2/./src/commands/commands.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global Office */\n\n/**\n * Show an outlook notification when the add-in command is executed.\n * @param event\n */\nexport function setNotificationInOutlook(event: Office.AddinCommands.Event) {\n  const message: Office.NotificationMessageDetails = {\n    type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,\n    message: \"Performed action.\",\n    icon: \"Icon.80x80\",\n    persistent: true,\n  };\n\n  // Show a notification message.\n  Office.context.mailbox.item.notificationMessages.replaceAsync(\"ActionPerformanceNotification\", message);\n\n  // Be sure to indicate when the add-in command function is complete.\n  event.completed();\n}\n","import { setNotificationInOutlook } from \"./outlook\";\n\n/* global Office */\n\n// Register the add-in commands with the Office host application.\nOffice.onReady(async (info) => {\n  switch (info.host) {\n    case Office.HostType.Outlook:\n      Office.actions.associate(\"action\", setNotificationInOutlook);\n      break;\n    default: {\n      throw new Error(`${info.host} not supported.`);\n    }\n  }\n});\n"],"names":["setNotificationInOutlook","event","message","type","Office","MailboxEnums","ItemNotificationMessageType","InformationalMessage","icon","persistent","context","mailbox","item","notificationMessages","replaceAsync","completed","onReady","async","info","host","HostType","Outlook","Error","actions","associate"],"sourceRoot":""}